global
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3 no-tlsv10

    maxconn 2048
    tune.ssl.default-dh-param 2048

defaults
    log     global
    mode    http

    option  httplog
    option  dontlognull
    option  forwardfor
    option  http-server-close

    timeout connect 10s
    timeout client  5m
    timeout server  5m

    stats enable
    stats uri /stats
    stats realm Haproxy\ Statistics

frontend www-http
    bind :80

    #redirect to HTTPS if ssl_fc is false / off.
    redirect scheme https if !{ ssl_fc }

    default_backend magento-backend

frontend www-https
    bind :443 ssl crt haproxy.pem
    acl secure dst_port eq 443

    http-request set-header "SSL-OFFLOADED" "1"
    http-request set-header "X-FORWARDED-PROTO" "https"

    http-response set-header "Strict-Transport-Security" "max-age=31536000;\ includeSubDomains;\ preload"
    http-response replace-header "Set-Cookie" "^Set-Cookie (.*)" "Set-Cookie:\ \1;\ Secure if secure"

    default_backend magento-backend

resolvers dockernameserver
    nameserver docker 127.0.0.11:53

    # How long to "hold" a backend server's up/down status depending on the name resolution status.
    # For example, if an NXDOMAIN response is returned, keep the backend server in its current state (up) for
    # at least another 30 seconds before marking it as down due to DNS not having a record for it.
    hold valid    10s
    hold other    30s
    hold refused  30s
    hold nx       30s
    hold timeout  30s
    hold obsolete 30s

    # How many times to retry a query
    resolve_retries 5

    # How long to wait between retries when no valid response has been received
    timeout retry 5s

    # How long to wait for a successful resolution
    timeout resolve 5s

backend magento-backend
    balance first

    # This configuration is overly complicated to provide a fall back for both varnish and non-varnish stacks.
    # If varnish is not enabled in the stack then HAProxy should fall back to the container webservice
    # If using hybrid configuration fallback to the host webservice
    server varnish01 varnish:80 check resolvers dockernameserver init-addr none id 1
    server web01 web:80 check resolvers dockernameserver init-addr none id 2
    server web02 host.docker.internal:80 check resolvers dockernameserver init-addr none id 3
